name: Build Godot Engine And Templates Using Pre-built Containers

on:
  workflow_dispatch:  # Enables manual trigger from the GitHub UI

permissions:
  contents: write
  packages: write

jobs:
  run-builds:
    runs-on: self-hosted

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - uses: actions/setup-python@v5
        with:
          python-version: '3.10' 

      - name: Print Environment Variables
        run: env
    
      - name: Setup Environment
        run: |
          echo "REGISTRY_URL=ghcr.io" >> $GITHUB_ENV
          echo "GITHUB_REPOSITORY_OWNER=${{ github.repository_owner }}" >> $GITHUB_ENV
          echo "USER_HOME_DIRECTORY=/home/${{ secrets.HOST_USER_NAME }}" >> $GITHUB_ENV
          echo "CACHED_OSX_SDK_PATH=/home/${{ secrets.HOST_USER_NAME }}/.cache/github-runners/build-containers/osx-sdk" >> $GITHUB_ENV
          echo "CACHED_GODOT_SOURCE_PATH=/home/${{ secrets.HOST_USER_NAME }}/.cache/github-runners/build-godot-and-templates/godot" >> $GITHUB_ENV
      
      - name: Print Environment Variables
        run: env

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Run build.sh to Invoke Docker Builds
        run: |
          cd build-godot-and-templates
          chmod +x build.sh
          ./build.sh

      # - name: Prepare artifacts for release
      #   id: export
      #   run: |
      #     mkdir -p release
      #     cp -r build/godot-and-templates/out/* release/  # Copy output artifacts to a release directory
      #     echo "archive_directory=$(pwd)/release" >> $GITHUB_ENV

      # - uses: actions/upload-artifact@v4
      #   with:
      #     name: my-artifact
      #     path: ${{ env.archive_directory }}
